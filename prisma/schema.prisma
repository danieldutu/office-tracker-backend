// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String            @id @default(uuid())
  email         String            @unique
  name          String
  passwordHash  String?           @map("password_hash")
  role          String            @default("user")
  avatarUrl     String?           @map("avatar_url")
  createdAt     DateTime          @default(now()) @map("created_at")
  updatedAt     DateTime          @updatedAt @map("updated_at")

  // Relations
  attendance    AttendanceRecord[]
  teams         UserTeam[]

  @@map("users")
}

model AttendanceRecord {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  date      DateTime @db.Date
  status    String   // 'office', 'remote', 'absent', 'vacation'
  notes     String?  @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, date])
  @@index([date])
  @@index([userId, date])
  @@map("attendance")
}

model Team {
  id          String     @id @default(uuid())
  name        String
  description String?    @db.Text
  createdAt   DateTime   @default(now()) @map("created_at")

  // Relations
  members     UserTeam[]

  @@map("teams")
}

model UserTeam {
  userId String @map("user_id")
  teamId String @map("team_id")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  team   Team   @relation(fields: [teamId], references: [id], onDelete: Cascade)

  @@id([userId, teamId])
  @@map("user_teams")
}
